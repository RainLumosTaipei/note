import{_ as a,c as t,o as s,ag as i}from"./chunks/framework.BmLMQRXF.js";const k=JSON.parse('{"title":"deque","description":"","frontmatter":{},"headers":[],"relativePath":"lang/cxx/stl/container/deque.md","filePath":"lang/cxx/stl/container/deque.md"}'),n={name:"lang/cxx/stl/container/deque.md"};function r(p,e,l,d,o,h){return s(),t("div",null,e[0]||(e[0]=[i('<h1 id="deque" tabindex="-1">deque <a class="header-anchor" href="#deque" aria-label="Permalink to &quot;deque&quot;">​</a></h1><p>deque 允许在两侧插入元素，总体模拟连续空间。</p><p>deque 包含三个指针 begin, end, 和一个指向 map 的指针，以及一个 map_size。</p><p>deque 为分段连续，用一个 map 记录每个 node 的起始地址，每个 node 内部为连续的空间。</p><p>stack 和 queue 的实现默认基于 deque，也可以选择 list。</p><p>stack 可以用 vector，queue 不可以用 vector。</p><div class="language-c++ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::stack </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::list</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;int&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> s;</span></span></code></pre></div><p>stack 和 queue 不允许使用 iterator 遍历，因为这样会破坏使用意图。</p><h2 id="iterator" tabindex="-1">iterator <a class="header-anchor" href="#iterator" aria-label="Permalink to &quot;iterator&quot;">​</a></h2><p>重载 operator -,[]</p>',10)]))}const u=a(n,[["render",r]]);export{k as __pageData,u as default};
