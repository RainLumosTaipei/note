import{_ as t,c as n,o as l,j as a,a as r}from"./chunks/framework.BmLMQRXF.js";const v=JSON.parse('{"title":"Java IO","description":"","frontmatter":{},"headers":[],"relativePath":"lang/java/IO.md","filePath":"lang/java/IO.md"}'),o={name:"lang/java/IO.md"};function O(s,e,I,c,i,d){return l(),n("div",null,e[0]||(e[0]=[a("h1",{id:"java-io",tabindex:"-1"},[r("Java IO "),a("a",{class:"header-anchor",href:"#java-io","aria-label":'Permalink to "Java IO"'},"​")],-1),a("p",null,"Java 常⻅的 IO 模型有三种：BIO、NIO 和 AIO。",-1),a("p",null,"BIO：采⽤阻塞式 I/O 模型，线程在执⾏ I/O 操作时被阻塞，⽆法处理其他任务，适⽤于连接数较少的场景。",-1),a("p",null,"NIO：采⽤⾮阻塞 I/O 模型，线程在等待 I/O 时可执⾏其他任务，通过 Selector 监控多个 Channel 上的事件，适 ⽤于连接数多但连接时间短的场景。",-1),a("p",null,"AIO：使⽤异步 I/O 模型，线程发起 I/O 请求后⽴即返回，当 I/O 操作完成时通过回调函数通知线程，适⽤于连接 数多且连接时间⻓的场景。",-1)]))}const m=t(o,[["render",O]]);export{v as __pageData,m as default};
