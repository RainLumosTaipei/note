import{_ as i,c as a,o as n,ag as t}from"./chunks/framework.BmLMQRXF.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"net/Socket.md","filePath":"net/Socket.md"}'),l={name:"net/Socket.md"};function h(p,s,k,e,d,r){return n(),a("div",null,s[0]||(s[0]=[t(`<h2 id="地址" tabindex="-1">地址 <a class="header-anchor" href="#地址" aria-label="Permalink to &quot;地址&quot;">​</a></h2><h3 id="sockaddr-in" tabindex="-1">sockaddr_in <a class="header-anchor" href="#sockaddr-in" aria-label="Permalink to &quot;sockaddr_in&quot;">​</a></h3><p>表示 IPv4 地址的套接字地址结构。</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;netinet/in.h&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sockaddr_in { </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	sa_family_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sin_family;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 地址族，对于 IPv4 来说通常是 AF_INET </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	in_port_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sin_port;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 端口号 </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> in_addr sin_addr;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // IPv4 地址 </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	unsigned</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> char</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> sin_zero</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 保留字段，初始化或未使用的填充字节 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h3 id="in-addr" tabindex="-1">in_addr <a class="header-anchor" href="#in-addr" aria-label="Permalink to &quot;in_addr&quot;">​</a></h3><p>相当于<code>uint32_t</code></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;netinet/in.h&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">union</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> in_addr { </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	uint32_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> s_addr;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 以 32 位无符号整数形式存储的 IPv4 地址 </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">		uint8_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> s_b1;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 第一个字节 </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">		uint8_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> s_b2;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 第二个字节 </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">		uint8_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> s_b3;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 第三个字节 </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">		uint8_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> s_b4;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 第四个字节 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	} S_un_b; </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">		uint16_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> s_w1;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 前两个字节 </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">		uint16_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> s_w2;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 后两个字节 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	} S_un_w; </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h2 id="网络字节序" tabindex="-1">网络字节序 <a class="header-anchor" href="#网络字节序" aria-label="Permalink to &quot;网络字节序&quot;">​</a></h2><p>网络字节序为大端序，需要转换。</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 小端转网络大端</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">htonl</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 32</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">htons</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 16</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 大端转小端</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ntohl</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 32</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ntohs</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 16</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 点分十进制IP转为网络字节序</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">inet_addr</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 网络大端转字符串</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">inet_ntoa</span></span></code></pre></div><h2 id="套接字" tabindex="-1">套接字 <a class="header-anchor" href="#套接字" aria-label="Permalink to &quot;套接字&quot;">​</a></h2><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">socket</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(AF_INET, SOCK_STREAM, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SOCK_DGRAM</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SOCK_RAW</span></span></code></pre></div><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 本地地址</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sockaddr_in addrSrv;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">addrSrv.sin_addr.s_addr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> inet_addr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;192.168.0.118&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //使用当前主机任意可用IP</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">addrSrv.sin_family </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AF_INET;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">addrSrv.sin_port </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> htons</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  //使用端口8000</span></span></code></pre></div>`,14)]))}const g=i(l,[["render",h]]);export{c as __pageData,g as default};
